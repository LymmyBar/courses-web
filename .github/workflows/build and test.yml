name: Docker Compose Build and Test

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]
    
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Set up .env file
        run: |
          echo "${{secrets.DOCKER_ENV}}" >> .env

      - name: Build and start services
        run: docker-compose up --build -d

      - name: Show running containers
        run: docker ps -a

      - name: Show web service logs if failed
        if: failure()
        run: docker-compose logs web

      - name: Run tests
        run: docker-compose exec -T web python manage.py test courses --keepdb

  deploy-to-heroku:
    name: Deploy to Heroku
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # деплой лише з main/master
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Heroku Container Registry
        run: echo "${{ secrets.HEROKU_API_KEY }}" | docker login --username=_ --password-stdin registry.heroku.com

      - name: Build Docker image
        run: docker build -t registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web .

      - name: Push to Heroku Container Registry
        run: docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web

      - name: Release the app
        run: |
          heroku container:release web --app ${{ secrets.HEROKU_APP_NAME }}
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

